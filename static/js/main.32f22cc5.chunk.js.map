{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","Title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","toLowerCase","document","getElementById","navigator","clipboard","writeText","split","join","charAt","slice","length","defaultProps","aboutText","App","setMode","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.32f22cc5.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {  Link\r\n// } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.Title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0 text-light\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/\">{props.aboutText}</a>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-outline-danger\" type=\"submit\">Search</button>\r\n          </form> */}\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  Title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  Title: 'Set Title Here',\r\n  aboutText: 'About (Default)'\r\n};","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    // console.log(\"UpperCase was Clicked: \" +text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n  }\r\n\r\n  const handleLoClick = () => {\r\n    // console.log(\"UpperCase was Clicked: \" +text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n  }\r\n  const handleCopy = () => {\r\n    // console.log(\"UpperCase was Clicked: \" +text);\r\n    let text = document.getElementById('myBox');\r\n    // text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n  }\r\n  const ExtraSpace = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"))\r\n  }\r\n  const handleClearClick = () => {\r\n    // console.log(\"UpperCase was Clicked: \" +text);\r\n    let newText = '';\r\n    setText(newText);\r\n  }\r\n  const capitalizeCase = () => {\r\n    // console.log(\"UpperCase was Clicked: \" +text);\r\n    let newText = text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();\r\n    setText(newText);\r\n  }\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"On Change\");\r\n    setText(event.target.value)\r\n  }\r\n  const [text, setText] = useState('Enter Text Here');\r\n  //text = \"new text\";   //Wrong way to change the state\r\n  //setText(\"new text\");   //Right way to change the state\r\n  return (\r\n    <>\r\n      <div className='container' style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Upper Case</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to Lower Case</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy to Clipboard</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={ExtraSpace}>Remove Extra Space</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={capitalizeCase}>Capitalize Case</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear All</button>\r\n      </div>\r\n\r\n      <div className=\"container my-2\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n        <h1>Your Text Summary</h1>\r\n        <p>{text.split(\" \").length} words and {text.length} Characters</p>\r\n        <p>{0.008* text.split(\" \").length} Time Taken</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter Something in the textbox above to preview it here\"}</p>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useState } from 'react';\nimport React from 'react'\nimport './App.css';\n// import Alert from './components/Alert';   not completed\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   // Outlet,\n//   //  Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //Wheather dark mode is enabled or not\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n    }\n  }\n  return (\n    <>\n      {/* <Navbar Title=\"TextUtils\" aboutText=\"About TextUtils\"/> */}\n      {/* <Navbar /> */}\n      {/*<Alert alert = \"This is alert\"/> */}      {/* not completed*/}\n\n      {/* <Router> */}\n        <Navbar Title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <div className=\"container my-3\">\n          {/* <Routes> */}\n            {/* <Route path='/tekhub' > */}\n                {/* <Route path=\"components/TextForm\" element={ */}\n                  <TextForm heading=\"Enter the text below to Analyze\" mode={mode} />\n                  \n                {/* <Route path=\"components/About\" element={<About />} /> */}\n                \n            {/* </Route> */}\n          {/* </Routes> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}